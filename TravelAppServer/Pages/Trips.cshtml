@page
@using System.Globalization
@model TravelAppServer.Pages.TripsModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Ваши поездки";
    ViewData["Nav"] = "Trips";
}

<script src="https://code.jquery.com/jquery-3.5.0.js"></script>

<style>

    .trip {
        border-color: lightgrey;
        border-style: inset;
        border-width: 2px;
        padding: 1em;
        margin-bottom: 1em;
        border-radius: 30px;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
    }

        .trip:hover {
            border-color: blue;
        }

    .triphead {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .tripphototext {
        display: flex;
        flex-direction: row;
    }

    .triptext {
        margin-left: 2em;
    }

    .tripname {
        font-size: 25px;
        cursor: pointer;
    }

    .tripdesc {
        display: inline-block;
        margin-top: 1em;
        cursor: pointer;
    }

    .tripdate {
        display: inline-block;
        cursor: pointer;
        margin-top: 1em;
    }

    .photowrapper {
        position: relative;
        width: 100px;
        height: 100px;
    }

    .tripicons {
        height: 25px;
        width: 25px;
        margin: 0.2em;
    }

    .trips {
        width: 550px;
        margin-top: 2em;
    }

    .tripshead {
        display: flex;
        margin-bottom: 1em;
        justify-content: space-between;
    }

    .tripsname {
        margin-bottom: 0em;
        margin-top: 0em;
    }

    .add {
        width: 25px;
        height: 25px;
        margin-top: 0.7em;
    }

    .iconsintriphead{
        width: 66px;
    }
</style>

<div id="trips" class="trips center">
    @*<div id="trip_id" class="trip">
            <img width="100" height="100" src="">
            <div class="triptext">

                <label class="tripname">Аввстрий на майских</label>
                <br><br><br>
                <label>20 апреля 2019 - 21 мая 2020</label>

            </div>
        </div>*@

    <div class="tripshead">
        <h1 class="tripsname">Ваши поездки:</h1>
        <input title="Добавить Поездку" type="image" class="add" src="/images/add.png" onclick="addTrip()">
    </div>

    @if (Model.Trips.Count == 0)
    {
        <h2>У Вас нет ещё поездок! Скорее добавьте!</h2>
    }

    @foreach (var trip in Model.Trips)
    {
        <div id="trip_@trip.Id" class="trip">

            <div class="triphead">
                <a href="@String.Format($"/trip?id={trip.Id}")" class="tripphototext">
                    <div class="photowrapper">
                        @if (trip.Photos.Length == 0)
                        {
                            <img width="100" height="100" src="/images/nophoto.png">
                        }
                        else
                        {
                            <img width="100" height="100" src="/@trip.Photos[0].Location">
                        }
                    </div>

                    <div class="triptext">

                        <label class="tripname">@trip.Name</label>
                        <br>
                        <label class="tripdesc">@trip.TextField</label>
                        <br>
                        @{ var fd = trip.FromDate == null ? "" : (new DateTime(trip.FromDate.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU"));
                            var td = trip.ToDate == null ? "" : (new DateTime(trip.ToDate.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU"));}
                        <label class="tripdate">@fd @String.Format(fd == "" && td == "" ? "" : "-") @td</label>

                    </div>
                </a>
                <div class="iconsintriphead">
                    <a href="/Trip/Edit?id=@trip.Id"><img title="Редактировать" class="tripicons" src="/images/edit.png" /></a>
                    <input title="Удалить" type="image" class="tripicons" src="/images/rubbish.png" onclick="Delete('@trip.Id')">
                </div>

            </div>
        </div>
    }
</div>








<script>


    function Delete(tripid) {
        $.ajax({
            type: "DELETE",
            url: "?handler=Delete",
             data: { Id: tripid },

             success: function (data) {
                 location.href = "/trips";
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        });
    }

    function addTrip() {
        $.ajax({
            type: "Get",
            url: "?handler=AddTrip",
            success: function (data) {
                location.href = "/Trip/Edit?id=" + data;
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        });
    }

    //GetTrips();

    $(document).ready(function () {




    });




    function GetTrips() {
        $.ajax({
            type: "Get",
            url: "/api/trip/getall?token=" + localStorage.getItem('travelapptoken'),
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    GetTrip(data[i]);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                /*if (xhr.status == 404) {
                    if (xhr.responseText == "Such account doesn't exist!") {
                        alert("Неправильно введены логин и пароль");
                    }
                    else if (xhr.responseText == "Invalid arguments") {
                        alert("Поля не могут быть пустыми");
                    }
                }*/
                //Добавить обработку, если токен невалидный
            }
        });
    }

    function GetTrip(id) {
        $.ajax({
            type: "Get",
            url: "/api/trip/read?id=" + id + "&token=" + localStorage.getItem('travelapptoken'),
            dataType: "json",
            success: function (data) {

                var newtrip = "<div id=\"trip_{{ID}}\" class=\"trip\">\
                    <img width=\"100\" height=\"100\" src = \"\">\
                        <div class=\"triptext\">\
                            <label class=\"tripname\">{{NAME}}</label>\
                            <br><br><br>";

                var fd = ticksToDate(data.fromDate);
                var td = ticksToDate(data.toDate);
                if (data.fromDate != null || data.toDate != null) {
                    if (data.fromDate == null) {
                        newtrip += "<label>- {{DATETO}}</label>";
                    }
                    else if(data.toDate == null){
                        newtrip += "<label>{{DATEFROM}} -</label>";
                    }
                    else {
                        newtrip += "<label>{{DATEFROM}} - {{DATETO}}</label>";
                    }
                }


                newtrip += "</div>\
                    </div>";


                const yef = new Intl.DateTimeFormat('ru', { year: 'numeric' }).format(fd)
                const mof = new Intl.DateTimeFormat('ru', { month: 'short' }).format(fd)
                const daf = new Intl.DateTimeFormat('ru', { day: '2-digit' }).format(fd)
                const yet = new Intl.DateTimeFormat('ru', { year: 'numeric' }).format(td)
                const mot = new Intl.DateTimeFormat('ru', { month: 'short' }).format(td)
                const dat = new Intl.DateTimeFormat('ru', { day: '2-digit' }).format(td)

                newtrip = newtrip.replace("{{ID}}", data.id).replace("{{NAME}}", data.name).replace("{{DATEFROM}}", daf + " " + mof + " " + yef).replace("{{DATETO}}", dat + " " + mot + " " + yet);
                //newtrip.replace("{{BASE64}}", data.id);

                $("#trips").append(newtrip);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                /*if (xhr.status == 404) {
                    if (xhr.responseText == "Such account doesn't exist!") {
                        alert("Неправильно введены логин и пароль");
                    }
                    else if (xhr.responseText == "Invalid arguments") {
                        alert("Поля не могут быть пустыми");
                    }
                }*/
                //Добавить обработку, если токен невалидный
            }

        });
    }



    function ticksToDate(ticks) {
        var TICKS_AT_EPOCH = 621355968000000000;
        var TICKS_PER_MILLISECOND = 10000;
        return new Date((ticks - TICKS_AT_EPOCH) / TICKS_PER_MILLISECOND);
    }

    function dateToTicks(date) {
        var TICKS_AT_EPOCH = 621355968000000000;
        var TICKS_PER_MILLISECOND = 10000;
        return (date.getTime() * TICKS_PER_MILLISECOND) + TICKS_AT_EPOCH
    }


</script>