@page
@using System.Globalization
@model TravelAppServer.Pages.TripsModel
@{
    ViewData["Title"] = "Trips";
}
@Html.AntiForgeryToken()

<script src="https://code.jquery.com/jquery-3.5.0.js"></script>

<style>

    .trip {
        display: flex;
        border-color: black;
        border-style: inset;
        border-width: 2px;
        padding: 1em;
        width: 500px;
        margin-bottom: 1em;
    }

        .trip:hover {
            border-color: blue;
            cursor: pointer;
        }

    .triptext {
        margin-left: 2em;
    }

    .tripname {
        font-size: 25px;
    }
</style>

<h1>Trips</h1>

<a href="/Account/Logout"><button>Выйти из учетки</button></a>

<div id="trips">
    @*<div id="trip_id" class="trip">
            <img width="100" height="100" src="">
            <div class="triptext">

                <label class="tripname">Аввстрий на майских</label>
                <br><br><br>
                <label>20 апреля 2019 - 21 мая 2020</label>

            </div>
        </div>*@

    @foreach (var trip in Model.Trips)
    {
        <a href="@String.Format($"/trip?id={trip.Id}")">
            <div id="trip_@trip.Id" class="trip">

                @if (trip.Photos.Length == 0)
                {
                    <img width="100" height="100" src="/images/nophoto.png">
                }
                else
                {
                    <img width="100" height="100" src="@trip.Photos[0].Location">
                }

                <div class="triptext">

                    <label class="tripname">@trip.Name</label>
                    <br><br><br>
                    @{ var fd = trip.FromDate == null ? "" : (new DateTime(trip.FromDate.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU"));
                        var td = trip.ToDate == null ? "" : (new DateTime(trip.ToDate.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU"));}
                    <label>@fd - @td</label>

                </div>
            </div>
        </a>
    }
</div>








<script>

    //GetTrips();

    $(document).ready(function () {




    });




    function GetTrips() {
        $.ajax({
            type: "Get",
            url: "/api/trip/getall?token=" + localStorage.getItem('travelapptoken'),
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    GetTrip(data[i]);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                /*if (xhr.status == 404) {
                    if (xhr.responseText == "Such account doesn't exist!") {
                        alert("Неправильно введены логин и пароль");
                    }
                    else if (xhr.responseText == "Invalid arguments") {
                        alert("Поля не могут быть пустыми");
                    }
                }*/
                //Добавить обработку, если токен невалидный
            }
        });
    }

    function GetTrip(id) {
        $.ajax({
            type: "Get",
            url: "/api/trip/read?id=" + id + "&token=" + localStorage.getItem('travelapptoken'),
            dataType: "json",
            success: function (data) {

                var newtrip = "<div id=\"trip_{{ID}}\" class=\"trip\">\
                    <img width=\"100\" height=\"100\" src = \"\">\
                        <div class=\"triptext\">\
                            <label class=\"tripname\">{{NAME}}</label>\
                            <br><br><br>";

                var fd = ticksToDate(data.fromDate);
                var td = ticksToDate(data.toDate);
                if (data.fromDate != null || data.toDate != null) {
                    if (data.fromDate == null) {
                        newtrip += "<label>- {{DATETO}}</label>";
                    }
                    else if(data.toDate == null){
                        newtrip += "<label>{{DATEFROM}} -</label>";
                    }
                    else {
                        newtrip += "<label>{{DATEFROM}} - {{DATETO}}</label>";
                    }
                }


                newtrip += "</div>\
                    </div>";


                const yef = new Intl.DateTimeFormat('ru', { year: 'numeric' }).format(fd)
                const mof = new Intl.DateTimeFormat('ru', { month: 'short' }).format(fd)
                const daf = new Intl.DateTimeFormat('ru', { day: '2-digit' }).format(fd)
                const yet = new Intl.DateTimeFormat('ru', { year: 'numeric' }).format(td)
                const mot = new Intl.DateTimeFormat('ru', { month: 'short' }).format(td)
                const dat = new Intl.DateTimeFormat('ru', { day: '2-digit' }).format(td)

                newtrip = newtrip.replace("{{ID}}", data.id).replace("{{NAME}}", data.name).replace("{{DATEFROM}}", daf + " " + mof + " " + yef).replace("{{DATETO}}", dat + " " + mot + " " + yet);
                //newtrip.replace("{{BASE64}}", data.id);

                $("#trips").append(newtrip);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                /*if (xhr.status == 404) {
                    if (xhr.responseText == "Such account doesn't exist!") {
                        alert("Неправильно введены логин и пароль");
                    }
                    else if (xhr.responseText == "Invalid arguments") {
                        alert("Поля не могут быть пустыми");
                    }
                }*/
                //Добавить обработку, если токен невалидный
            }

        });
    }



    function ticksToDate(ticks) {
        var TICKS_AT_EPOCH = 621355968000000000;
        var TICKS_PER_MILLISECOND = 10000;
        return new Date((ticks - TICKS_AT_EPOCH) / TICKS_PER_MILLISECOND);
    }

    function dateToTicks(date) {
        var TICKS_AT_EPOCH = 621355968000000000;
        var TICKS_PER_MILLISECOND = 10000;
        return (date.getTime() * TICKS_PER_MILLISECOND) + TICKS_AT_EPOCH
    }


</script>