@page
@using System.Globalization
@using System.Text;
@model TravelAppServer.Pages.Trip.EditModel
@{
    ViewData["Title"] = "Edit";
}

@Html.AntiForgeryToken()

<script src="https://rawgit.com/jackmoore/autosize/master/dist/autosize.min.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.6/cropper.js"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.6/cropper.css" rel="stylesheet">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">


<h1>Trip </h1>

<style>

    .trip {
        display: flex;
        border-color: black;
        border-style: inset;
        border-width: 2px;
        padding: 1em;
        flex-direction: column;
        width: 800px;
        margin-bottom: 1em;
    }

    .placeheader {
        display: flex;
        border-color: black;
        border-style: inset;
        border-width: 2px;
        padding: 1em;
        margin-bottom: 1em;
    }

    .placename {
        font-weight: bold;
        width: 350px;
    }

    .placedescription {
        width: 350px;
        resize: none;
    }

    .placeadress {
        width: 350px;
    }

    .tripphototext {
        display: flex;
        flex-direction: row;
    }

    .triphead {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .triptext {
        margin-left: 2em;
    }


    .placetext {
        margin-left: 2em;
    }

    .tripname {
        font-size: 25px;
        width: 350px;
    }

    .tripdescription {
        margin-top: 1em;
        width: 350px;
        resize: none;
    }

    .goodname {
        width: 150px;
    }

    .goalname {
        width: 150px;
    }

    .tripdata {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
    }

        .tripdata #places {
            flex: 0 0 65%;
        }

    .checkboxes {
    }

    .editbutton {
        align-self: start;
        align-items: center;
        width: 35;
        height: 35;
        background-image: url(/images/edit.png);
        background-size: 35px 35px;
        /* padding: 1px; */
        background-origin: content-box;
        border: 2px solid black;
    }

        .editbutton:hover {
        }

    .inputline {
        border: none;
        border-bottom: lightgrey solid 1px;
    }

    .caterogyhead {
        display: flex;
        margin-bottom: 1em;
        justify-content: space-between;
    }

    .categoryname {
        margin-bottom: 0em;
        margin-top: 0em;
    }

    .add {
        width: 25px;
        height: 25px;
        margin-top: 0.7em;
    }

    .good {
        margin-bottom: 1em;
    }

    .goal {
        margin-bottom: 1em;
    }

    .purchase {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        align-items: center;
        margin-bottom: 2em;
    }

    .purchasedata {
        display: flex;
        flex-direction: column;
    }

    .purchasename {
        margin-top: 0.5em;
        width: 150px;
    }

    .purchasecost {
        width: 150px;
        margin-top: 0.5em;
    }

    .remove {
        width: 18px;
        height: 18px;
    }

    .removeplace {
        margin-left: 1em;
    }

    .tripicons {
        height: 25px;
        width: 25px;
        margin: 0.2em;
    }

    .photowrapper {
        position: relative;
        width: 100px;
        height: 100px;
    }

        .photowrapper .removephoto {
            height: 12px;
            width: 12px;
            position: absolute;
            top: 0px;
            right: 0px;
            visibility: hidden;
        }

        .photowrapper .addphoto {
            height: 80%;
            width: 80%;
            position: absolute;
            top: 10%;
            left: 10%;
            visibility: hidden;
        }

        .photowrapper:hover .withphoto + .removephoto {
            visibility: visible;
        }

        .photowrapper:hover .addphoto {
            visibility: visible;
        }

    .uploader {
        display: none;
    }


    .cropper-container{
        width: 583px !important;
        height: 349px !important;
    }

    .leftsideoftheplace {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .placevisited {
        margin-top: 2em;
    }
</style>

<a href="/Account/Logout"><button>Выйти из учетки</button></a>
<a href="/Trips" type="button"><button>Поездки</button></a>

<form onsubmit="return false;">
<button id="submit" type="submit" style="display:none;"></button>
<input id="uploader" class="uploader" type="file" onchange="OnChange(this)">


<div id="trip_@Model.Trip.Id" class="trip">

    <div class="triphead">
        <div class="tripphototext">

            <div class="photowrapper">
                @if (Model.Trip.Photos.Length == 0)
                {
                    <img width="100" height="100" class="nophoto" src="/images/nophoto.png">
                }
                else
                {
                    <img width="100" height="100" class="withphoto" src="/@Model.Trip.Photos[0].Location">
                }
                <input title="Удалить фото" class="removephoto" type="image" src="/images/cross.png" onclick="RemovePhoto(this)" />
                <input title="Добавить фото" type="image" class="addphoto" src="~/images/add photo.png" onclick="AddPhoto(this)" />
            </div>

            <div class="triptext">

                <input id="tripname" class="tripname inputline" value="@Model.Trip.Name" placeholder="Название поездки..." required/>
                <br>
                <textarea id="tripdescription" class="tripdescription inputline" placeholder="Описание...">@Model.Trip.TextField</textarea>
                <br><br>
                @{ var fd = Model.Trip.FromDate == null ? "" : (new DateTime(Model.Trip.FromDate.Value)).ToString("yyyy-MM-dd");
                    var td = Model.Trip.ToDate == null ? "" : (new DateTime(Model.Trip.ToDate.Value)).ToString("yyyy-MM-dd");}

                <input id="fromdate" type="date" value="@fd" />
                <label> - </label>
                <input id="todate"  type="date" value="@td" />
            </div>
        </div>
        <div>
            <a href="/trip?id=@Model.Id"><img title="Отмена" type="image" class="tripicons" src="/images/cross.png"/></a>
            <input title="Сохранить" type="image" class="tripicons" src="/images/save.png" onclick="Save()">
            <input title="Удалить" type="image" class="tripicons" src="/images/rubbish.png" onclick="Delete()">
        </div>
        @*<a href="/Edit?@Model.Trip.Id" class="editbutton"></a>*@
    </div>

    <div class="tripdata">
        <div id="places">
            <div class="caterogyhead">
                <h1 class="categoryname">Места:</h1>
                <input title="Добавить место" type="image" class="add" src="/images/add.png" onclick="addPlace()">
            </div>
            @foreach (var place in Model.Trip.Places)
            {
                <div id="place_@place.Id" class="placeheader">

                    <div class="leftsideoftheplace">

                        <div class="photowrapper">

                            @if (place.Photos.Length == 0)
                            {
                                <img width="100" height="100" class="nophoto" src="/images/nophoto.png">
                            }
                            else
                            {
                                <img width="100" height="100" class="withphoto" src="/@place.Photos[0].Location">
                            }
                            <input title="Удалить фото" class="removephoto" type="image" src="/images/cross.png" onclick="RemovePhoto(this)" />
                            <input title="Добавить фото" type="image" class="addphoto" src="~/images/add photo.png" onclick="AddPhoto(this)" />
                        </div>

                        <input type="checkbox" class="placevisited"  @string.Format(place.IsVisited ? "checked" : "")>

                    </div>

                    <div class="placetext">

                        <input class="placename inputline" value="@place.Name" placeholder="Название.." required/>
                        <br><br>
                        <textarea class="placedescription inputline" placeholder="Описание..">@place.Description</textarea>
                        <br><br>
                        <input class="placeadress inputline" value="@place.Adress" placeholder="Адрес.." required/>
                        <br><br>

                        @{ var placedate = place.Date == null ? "" : (new DateTime(place.Date.Value)).ToString("yyyy-MM-dd"); }
                        <input type="date" value="@placedate" />

                    </div>
                    <input title="Удалить" type="image" class="remove removeplace" src="/images/rubbish.png" onclick="this.parentElement.remove()">
                </div>
            }
        </div>


        <div class="checkboxes">

            <div id="goods">
                <div class="caterogyhead">
                    <h1 class="categoryname">Вещи:</h1>
                    <input title="Добавить вещь" type="image" class="add" src="/images/add.png" onclick="addGood()">
                </div>
                @foreach (var good in Model.Trip.Goods)
                {
                    <div id="good_@good.Id" class="good">

                        <input type="checkbox" @string.Format(good.IsTook ? "checked" : "")>
                        <input class="goodname inputline" value="@good.Name" placeholder="Название..." required>
                        <input title="Удалить" type="image" class="remove" src="/images/rubbish.png" onclick="this.parentElement.remove()">

                    </div>
                }
            </div>
            <div id="goals">
                <div class="caterogyhead">
                    <h1 class="categoryname">Цели:</h1>
                    <input title="Добавить цель" type="image" class="add" src="/images/add.png" onclick="addGoal()">
                </div>
                @foreach (var goal in Model.Trip.Goals)
                {
                    <div id="goal_@goal.Id" class="goal">

                        <input type="checkbox" @string.Format(goal.IsDone ? "checked" : "")>
                        <input class="goalname inputline" value="@goal.Name" placeholder="Название..." required>
                        <input title="Удалить" type="image" class="remove" src="/images/rubbish.png" onclick="this.parentElement.remove()">

                    </div>
                }
            </div>
            <div id="purchases">
                <div class="caterogyhead">
                    <h1 class="categoryname">Покупки:</h1>
                    <input title="Добавить покупку" type="image" class="add" src="/images/add.png" onclick="addPurchase()">
                </div>
                @foreach (var purchase in Model.Trip.Purchases)
                {
                    <div id="purchase_@purchase.Id" class="purchase">

                        <input type="checkbox" @string.Format(purchase.IsBought ? "checked" : "")>
                        <div class="purchasedata">
                            <select>
                                @foreach (var category in Model.Categories)
                                {
                                    <option @String.Format(category.Id == purchase.CategoryId || (purchase.CategoryId == Guid.Empty && category.Name == "Без учёта") ? "selected" : "")>@category.Name</option>
                                }
                            </select>
                            <input class="purchasename inputline" value="@purchase.Name" placeholder="Название..." required>
                            <input class="purchasecost inputline" value="@purchase.Price.ToString().Replace(",", ".")" placeholder="Стоимость..." required oninput="onPriceChange(this)">
                        </div>
                        <input title="Удалить" type="image" class="remove" src="/images/rubbish.png" onclick="this.parentElement.remove()">

                    </div>
                }
            </div>
        </div>
    </div>
</div>

</form>


<div id="dialog-cutter" title="Обрежьте фото" style="display:none;">
    <img id="imagecutter" height="350" width="500" style="margin: 3em;display: block;max-width: 100%;" />
</div>



<script>

    autosize(document.getElementById("tripdescription"));
    autosize($(".placedescription"));

                var addedgoods = 0;
                var addedgoals = 0;
    var addedpurchases = 0;
    var addedplaces = 0;


                function addGood() {

                    var good = "<div id=\"good_{{ID}}\" class=\"good\">\
                                    <input type=\"checkbox\">\
                                    <input class=\"goodname inputline\" placeholder=\"Название...\" required>\
                        <input title=\"Удалить\" type=\"image\" class=\"remove\" src=\"/images/rubbish.png\" onclick=\"this.parentElement.remove()\">\
                    </div>";

        good = good.replace("{{ID}}", addedgoods);

        $("#goods").append(good);

        $("#good_" + addedgoods + " .inputline").focus();

            addedgoods++;
    }

        function addGoal() {
            var goal = "<div id=\"goal_{{ID}}\" class=\"goal\">\
                            <input type=\"checkbox\">\
                            <input class=\"goalname inputline\" placeholder=\"Название...\" required>\
                        <input title=\"Удалить\" type=\"image\" class=\"remove\" src=\"/images/rubbish.png\" onclick=\"this.parentElement.remove()\">\
                    </div>";

        goal = goal.replace("{{ID}}", addedgoals);

        $("#goals").append(goal);

        $("#goal_" + addedgoals + " .inputline").focus();

        addedgoals++;
    }

    function addPurchase() {
        var purchase = "<div id=\"purchase_{{ID}}\" class=\"purchase\">\
                        <input type=\"checkbox\">\
                        <div class=\"purchasedata\">\
                            <select> @foreach (var category in Model.Categories)
                                {
                                    <text><option @String.Format(category.Name == "Без учёта" ? "selected" : "")>@category.Name</option></text>
                                }\
                            </select>\
                            <input class=\"purchasename inputline\" placeholder=\"Название...\" required>\
                            <input class=\"purchasecost inputline\" placeholder=\"Стоимость...\" required oninput=\"onPriceChange(this)\">\
                        </div>\
                        <input title=\"Удалить\" type=\"image\" class=\"remove\" src=\"/images/rubbish.png\" onclick=\"this.parentElement.remove()\">\
                    </div>";

        purchase = purchase.replace("{{ID}}", addedpurchases);

        $("#purchases").append(purchase);

        $("#purchase_" + addedpurchases + " .purchasename").focus();

        addedpurchases++;
    }

    function addPlace() {
        var place = "<div id=\"place_{{ID}}\" class=\"placeheader\">\
                        <div class=\"leftsideoftheplace\">\
                            <div class=\"photowrapper\">\
                                <img width=\"100\" height=\"100\" class=\"nophoto\" src=\"/images/nophoto.png\">\
                                <input title=\"Удалить фото\" class=\"removephoto\" type=\"image\" src=\"/images/cross.png\" onclick=\"RemovePhoto(this)\" />\
                                <input title=\"Добавить фото\" type=\"image\" class=\"addphoto\" src=\"/images/add photo.png\" onclick=\"AddPhoto(this)\" />\
                            </div>\
                            <input type=\"checkbox\" class=\"placevisited\">\
                        </div>\
                        <div class=\"placetext\">\
                            <input class=\"placename inputline\" placeholder=\"Название..\" required/>\
                            <br><br>\
                            <textarea class=\"placedescription inputline\" placeholder=\"Описание..\"></textarea>\
                            <br><br>\
                            <input class=\"placeadress inputline\" placeholder=\"Адрес..\" required/>\
                            <br><br>\
                            <input type=\"date\" />\
                        </div>\
                        <input title=\"Удалить\" type=\"image\" class=\"remove removeplace\" src=\"/images/rubbish.png\" onclick=\"this.parentElement.remove()\">\
                    </div>";

        place = place.replace("{{ID}}", addedplaces);

        $("#places").append(place);

        autosize($("#place_" + addedplaces + " .placedescription"));
        $("#place_" + addedplaces + " .placename").focus();

        addedplaces++;
    }

    function RemovePhoto(element) {
        element.parentElement.children[0].src = "/images/nophoto.png";
        element.parentElement.children[0].className = "nophoto";
    }

    var currentimg;

    function AddPhoto(element) {
        currentimg = element.parentElement.children[0];
        $("#uploader").click();
    }

    function OnChange(input) {


        $("#imagecutter").attr('src', URL.createObjectURL(input.files[0]));

        var image = document.getElementById('imagecutter');
        var cropper = new Cropper(image, {
            aspectRatio: 1 / 1,
            strict: true,
        });


        $("#dialog-cutter").dialog({
            modal: true,
            draggable: false,
            maxHeight: 480,
            minHeight: 480,
            maxWidth: 600,
            minWidth: 600,
            buttons: {
                Ok: function () {
                    currentimg.src = cropper.getCroppedCanvas().toDataURL();
                    currentimg.className = "withphoto newphoto";

                    $(this).dialog("close");
                }
            },
            beforeClose: function () {
                cropper.destroy();
            }
        });

        input.value = "";
    }

    function onPriceChange(element) {
        element.value = element.value.replace(/[^0-9.]/g, '');
        element.value = element.value.replace(/(\..*)\./g, '$1');
    }

    function Save() {
        var ok = true;
        var name = $("#tripname").val();
        if (name == "") {
            ok = false;
        }
        var description = $("#tripdescription").val();
        var fromdate = $("#fromdate").val();
        var todate = $("#todate").val();
        var photo = $(".tripphototext .newphoto").attr('src');
        var newphoto;
        if (photo == null) {
            if ($(".tripphototext .nophoto").attr('src') != null) {
                newphoto = "nophoto";
            }
            else {
                newphoto = "no";
            }
            photo == null
        }
        else {
            newphoto = "yes";
        }

        var places = [];
        for (var i = 0; i < $(".placeheader").length; i++) {
            var placeid = $(".placeheader")[i].id;
            var place = [];
            place.push(placeid.replace("place_", ""));
            place.push($("#" + placeid + " .placename").val());
            if ($("#" + placeid + " .placename").val() == "") {
                ok = false;
            }
            place.push($("#" + placeid + " .placedescription").val());
            place.push($("#" + placeid + " .placeadress").val());
            if ($("#" + placeid + " .placeadress").val() == "") {
                ok = false;
            }
            place.push($("#" + placeid + " .placevisited").is(":checked"));
            place.push($("#" + placeid + " input[type=date]").val());
            var placephoto = $("#" + placeid + " .newphoto").attr('src');
            var placephotonewphoto;
            if (placephoto == null) {

                if ($("#" + placeid + " .nophoto").attr('src') != null) {
                    placephotonewphoto = "nophoto";
                }
                else {
                    placephotonewphoto = "no";
                }
                placephoto == null
            }
            else {
                placephotonewphoto = "yes";
            }
            place.push(placephoto);
            place.push(placephotonewphoto);
            places.push(place);
        }

        var goods = [];
        for (var i = 0; i < $(".good").length; i++) {
            var goodid = $(".good")[i].id;
            var good = [];
            good.push(goodid.replace("good_", ""));
            good.push($("#" + goodid + " .goodname").val());
            if ($("#" + goodid + " .goodname").val() == "") {
                ok = false;
            }
            good.push($("#" + goodid + " input[type=checkbox]").is(":checked"));
            goods.push(good);
        }

        var goals = [];
        for (var i = 0; i < $(".goal").length; i++) {
            var goalid = $(".goal")[i].id;
            var goal = [];
            goal.push(goalid.replace("goal_", ""));
            goal.push($("#" + goalid + " .goalname").val());
            if ($("#" + goalid + " .goalname").val() == "") {
                ok = false;
            }
            goal.push($("#" + goalid + " input[type=checkbox]").is(":checked"));
            goals.push(goal);
        }


        var purchases = [];
        for (var i = 0; i < $(".purchase").length; i++) {
            var purchaseid = $(".purchase")[i].id;
            var purchase = [];
            purchase.push(purchaseid.replace("purchase_", ""));
            purchase.push($("#" + purchaseid + " .purchasename").val());
            if ($("#" + purchaseid + " .purchasename").val() == "") {
                ok = false;
            }
            purchase.push($("#" + purchaseid + " select").val());
            purchase.push($("#" + purchaseid + " .purchasecost").val());
            if ($("#" + purchaseid + " .purchasecost").val() == "") {
                ok = false;
            }
            purchase.push($("#" + purchaseid + " input[type=checkbox]").is(":checked"));
            purchases.push(purchase);
        }

        if (!ok) {
            $("#submit").click();
            return;
        }

         $.ajax({
            type: "POST",
            url: "?handler=Save",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
             },
             data: { Id: "@Model.Trip.Id", name: name, description: description, fromdate: fromdate, todate: todate, photo: photo, newphoto: newphoto, places: places, goods: goods, goals: goals, purchases: purchases },

             success: function (data) {
                 //alert("saved");
                 location.href = location.href;
                //;
            },
            error: function (xhr, ajaxOptions, thrownError) {
                /*if (xhr.status == 404) {
                    if (xhr.responseText == "Such account doesn't exist!") {
                        alert("Неправильно введены логин и пароль");
                    }
                    else if (xhr.responseText == "Invalid arguments") {
                        alert("Поля не могут быть пустыми");
                    } else if (xhr.responseText == "Such email doesn't exist!") {
                        alert("Пользователя с таким email не существует");
                    }
                }*/
            }
        });
    }

    function Delete() {
        $.ajax({
            type: "DELETE",
            url: "?handler=Delete",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
             },
             data: { Id: "@Model.Trip.Id" },

             success: function (data) {
                 location.href = "/trips";
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        });
    }

</script>
