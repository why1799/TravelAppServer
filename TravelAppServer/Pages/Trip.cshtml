@page
@using System.Globalization
@model TravelAppServer.Pages.TripModel
@{
    Layout = "_Layout";
    ViewData["Title"] = Model.Trip.Name;
}

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<style>

    .trip {
        display: flex;
        border-color: lightgrey;
        border-style: inset;
        border-width: 2px;
        padding: 1em;
        flex-direction: column;
        width: 800px;
        margin-bottom: 1em;
        margin-top: 2em;
        border-radius: 30px;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
    }

    .placeheader {
        display: flex;
        border-color: lightgrey;
        border-style: inset;
        border-width: 2px;
        padding: 1em;
        margin-bottom: 1em;
        border-radius: 20px;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
    }

    .placename {
        font-weight: bold;
    }

    .placedescription {
        font-size: small;
        display: inline-block;
        margin-top: 1em;
    }

    .placeadress {
        display: inline-block;
        margin-top: 1em;
    }

    .placedate {
        display: inline-block;
        margin-top: 1em;
    }

    .tripphototext {
        display: flex;
        flex-direction: row;
        width: 770px;
    }

    .triphead {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .triptext {
        margin-left: 2em;
    }


    .placetext {
        margin-left: 2em;
    }

    .tripname {
        font-size: 25px;
    }

    .tripdata {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
    }

        .tripdata #places {
            flex: 0 0 65%;
        }

    .checkboxes {
    }

    .editbutton:hover {
    }

    .photowrapper {
        position: relative;
        width: 100px;
        height: 100px;
    }

    .tripdesc {
        display: inline-block;
        margin-top: 1em;
    }

    .tripdate {
        display: inline-block;
        margin-top: 1em;
    }

    .leftsideoftheplace {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .placevisited {
        margin-top: 2em;
    }

    .tripicons {
        height: 25px;
        width: 25px;
        margin: 0.2em;
    }

    .purchase {
        display: flex;
        flex-direction: row;
        align-items: center;
        margin-bottom: 1em;
    }

    .purchasedata {
        display: flex;
        flex-direction: column;
        margin-left: 0.5em;
    }

    .purchasecategory {
        font-size: smaller;
    }

    .purchaseprice {
        font-size: smaller;
    }

    .iconsintriphead {
        width: 70px;
    }

    .goodcount {
        margin-left: 0.5em;
    }

    .filesandtexts {
        display: flex;
        flex-direction: row;
        margin-bottom: 1.2em;
    }

        .filesandtexts > div {
            width: 45%;
            display: flex;
            flex-direction: row;
        }

    .filesdata {
        margin-right: 10%;
    }

    .files {
        display: flex;
        flex-direction: column;
        margin-top: 2.2em;
        margin-left: 1em;
        width: 240px;
    }

    .file {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
        margin-bottom: 0.3em;
    }

        .file > a {
            width: 100%;
        }

        .file span {
            display: inline-block;
            white-space: nowrap;
            overflow: hidden !important;
            text-overflow: ellipsis;
            width: 100%;
            text-decoration: underline;
        }

    .notes {
        display: flex;
        flex-direction: column;
        margin-top: 2.2em;
        margin-left: 1em;
        width: 240px;
    }

    .note {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
        margin-bottom: 0.6em;
    }

    .notename {
        display: inline-block;
        white-space: nowrap;
        overflow: hidden !important;
        text-overflow: ellipsis;
        width: 91%;
        text-decoration: underline;
        color: rgb(0, 0, 238);
        cursor: pointer;
    }

        .notename:active {
            color: rgb(238, 0, 0);
        }

    .notedescription {
        display: none;
    }

    .changername {
        width: 500px;
        margin-bottom: 1em;
    }

    .changerdescription {
        width: 500px;
        resize: none;
    }

    label {
        white-space: pre-wrap;
    }

    .showername {
        font-weight: bold;
        display: inline-block;
        margin-bottom: 1em;
        font-size: larger;
        overflow-wrap: break-word;
    }

    .showerdescription {
        overflow-wrap: break-word;
    }
</style>

<div id="trip_@Model.Trip.Id" class="trip center">

    <div class="triphead">
        <div class="tripphototext">
            <div class="photowrapper">
                @if (Model.Trip.Photos.Length == 0)
                {
                <img width="100" height="100" src="/images/nophoto.png">
                }
                else
                {
                <img width="100" height="100" src="/@Model.Trip.Photos[0].Location">
                }
            </div>

            <div class="triptext">

                <label class="tripname">@Model.Trip.Name</label>
                <br>
                <label class="tripdesc">@Model.Trip.TextField</label>
                <br>
                @{ var fd = Model.Trip.FromDate == null ? "" : (new DateTime(Model.Trip.FromDate.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU"));
                    var td = Model.Trip.ToDate == null ? "" : (new DateTime(Model.Trip.ToDate.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU"));}
                <label class="tripdate">@fd @String.Format(fd == "" && td == "" ? "" : "-") @td</label>

            </div>
        </div>
        <div class="iconsintriphead">
            <a href="/Trip/Edit?id=@Model.Trip.Id"><img title="Редактировать" class="tripicons" src="/images/edit.png" /></a>
            <input title="Удалить" type="image" class="tripicons" src="/images/rubbish.png" onclick="Delete()">
        </div>

    </div>

    <div class="filesandtexts">
        @if(Model.Trip.Files.Length > 0)
        {
        <div class="filesdata">
            <h1 class="categoryname">Файлы:</h1>
            <div class="files">
                @foreach (var file in Model.Trip.Files)
                    {
                <div id="file_@file.Id" class="file">
                    <a href="/@file.Location" download="@file.Name"><span>@file.Name</span></a>
                </div>
                    }
            </div>
        </div>
        }

        @if(Model.Trip.Notes.Length > 0)
        {
        <div>
            <h1 class="categoryname">Заметки:</h1>
            <div class="notes">
                @foreach (var note in Model.Trip.Notes)
                {
                <div class="note">
                    <span class="notename" onclick="ShowNote(this)">@note.Name</span>
                    <span class="notedescription">@note.Description</span>
                </div>
                }
            </div>
        </div>
        }
    </div>

    <div class="tripdata">
        @if (Model.Trip.Places.Length > 0)
        {
        <div id="places">
            <h1>Места:</h1>
            @foreach (var place in Model.Trip.Places)
                {
            <div id="place_@place.Id" class="placeheader">

                <div class="leftsideoftheplace">
                    <div class="photowrapper">
                        @if (place.Photos.Length == 0)
                        {
                        <img width="100" height="100" src="/images/nophoto.png">
                        }
                        else
                        {
                        <img width="100" height="100" src="/@place.Photos[0].Location">
                        }
                    </div>

                    <input type="checkbox" class="placevisited" @string.Format(place.IsVisited ? "checked" : "") disabled>
                </div>

                <div class="placetext">

                    <label class="placename">@place.Name</label>
                    <br>
                    <label class="placedescription">@place.Description</label><br>
                    <label class="placeadress">@place.Adress</label><br>

                    @{ var placedate = place.Date == null ? "" : (new DateTime(place.Date.Value)).ToString("dd MMMM yyyy", CultureInfo.CreateSpecificCulture("ru-RU")); }
                    <label class="placedate">@placedate</label>

                </div>
            </div>
                }
        </div>
        }

        <div class="checkboxes">

            @if (Model.Trip.Goods.Length > 0)
        {
            <div id="goods">
                <h1>Вещи:</h1>
                @foreach (var good in Model.Trip.Goods)
                {
                <div id="good_@good.Id" class="good">

                    <input type="checkbox" @string.Format(good.IsTook ? "checked" : "") disabled>
                    <label class="goodname">@good.Name</label>
                    <label class="goodcount">(@good.Count шт.)</label>
                    <br>
                    <label class="gooddescription">@good.Description</label><br>

                </div>
                }
            </div>
        }

            @if (Model.Trip.Goals.Length > 0)
        {
            <div id="goals">
                <h1>Цели:</h1>
                @foreach (var goal in Model.Trip.Goals)
                {
                <div id="goal_@goal.Id" class="goal">

                    <input type="checkbox" @string.Format(goal.IsDone ? "checked" : "") disabled>
                    <label class="goalname">@goal.Name</label>
                    <br>
                    <label class="goaldescription">@goal.Description</label><br>

                </div>
                }
            </div>
        }

            @if (Model.Trip.Purchases.Length > 0)
        {
            <div id="purchases">
                <h1>Покупки:</h1>
                @foreach (var purchase in Model.Trip.Purchases)
                {
                <div id="purchase_@purchase.Id" class="purchase">

                    <input type="checkbox" @string.Format(purchase.IsBought ? "checked" : "") disabled>

                    <div class="purchasedata">
                        <label class="purchasecategory">Категория: @Model.Categories.FirstOrDefault(x => x.Id == purchase.CategoryId)?.Name</label>
                        <label class="purchasename">@purchase.Name</label>
                        <label class="purchaseprice">Стоимость: @purchase.Price</label>
                    </div>

                </div>
                }
            </div>

        }
        </div>
    </div>
</div>

<div id="note-shower" title="Просмотр заметки" style="display:none;">
    <label class="showername"></label>
    <br>
    <label class="showerdescription"></label><br>
</div>


<script>

    function Delete() {
        $.ajax({
            type: "DELETE",
            url: "?handler=Delete",
             data: { Id: "@Model.Trip.Id" },

             success: function (data) {
                 location.href = "/trips";
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Ошибка:\n" + xhr.responseText);
            }
        });
    }

    function ShowNote(name) {
        $(".showername")[0].innerText = name.innerText;
        $(".showerdescription")[0].innerText = name.parentElement.children[1].innerText;

        $("#note-shower").dialog({
            modal: true,
            draggable: false,
            maxWidth: 540,
            minWidth: 540,
            closeOnEscape: true,
            buttons: {
                Ok: function () {
                    $(this).dialog("close");
                }
            },
            open: function () {
                //$(".changername").blur();
            }
        });
    }

</script>